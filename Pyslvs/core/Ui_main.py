# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/ahshoe/Desktop/Pyslvs/core/main.ui'
#
# Created by: PyQt5 UI code generator 5.7
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(762, 604)
        MainWindow.setMinimumSize(QtCore.QSize(762, 604))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/main.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setDockNestingEnabled(True)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowNestedDocks|QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralWidget.sizePolicy().hasHeightForWidth())
        self.centralWidget.setSizePolicy(sizePolicy)
        self.centralWidget.setObjectName("centralWidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralWidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.toolWidget = QtWidgets.QWidget(self.centralWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolWidget.sizePolicy().hasHeightForWidth())
        self.toolWidget.setSizePolicy(sizePolicy)
        self.toolWidget.setMinimumSize(QtCore.QSize(400, 0))
        self.toolWidget.setObjectName("toolWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.toolWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pointLayout = QtWidgets.QVBoxLayout()
        self.pointLayout.setObjectName("pointLayout")
        self.Entiteis_Point = QtWidgets.QTableWidget(self.toolWidget)
        self.Entiteis_Point.setMinimumSize(QtCore.QSize(331, 0))
        self.Entiteis_Point.setToolTipDuration(-1)
        self.Entiteis_Point.setAutoFillBackground(True)
        self.Entiteis_Point.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Entiteis_Point.setRowCount(1)
        self.Entiteis_Point.setColumnCount(4)
        self.Entiteis_Point.setObjectName("Entiteis_Point")
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/point.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon1)
        self.Entiteis_Point.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsEnabled)
        self.Entiteis_Point.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled)
        item.setCheckState(QtCore.Qt.Checked)
        self.Entiteis_Point.setItem(0, 3, item)
        self.Entiteis_Point.horizontalHeader().setDefaultSectionSize(70)
        self.Entiteis_Point.horizontalHeader().setMinimumSectionSize(65)
        self.pointLayout.addWidget(self.Entiteis_Point)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.point_x_layout = QtWidgets.QVBoxLayout()
        self.point_x_layout.setObjectName("point_x_layout")
        self.label = QtWidgets.QLabel(self.toolWidget)
        self.label.setTextFormat(QtCore.Qt.RichText)
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.point_x_layout.addWidget(self.label)
        self.X_coordinate = QtWidgets.QDoubleSpinBox(self.toolWidget)
        self.X_coordinate.setProperty("showGroupSeparator", False)
        self.X_coordinate.setMinimum(-10000.0)
        self.X_coordinate.setMaximum(10000.0)
        self.X_coordinate.setObjectName("X_coordinate")
        self.point_x_layout.addWidget(self.X_coordinate)
        self.horizontalLayout.addLayout(self.point_x_layout)
        self.point_y_layout = QtWidgets.QVBoxLayout()
        self.point_y_layout.setObjectName("point_y_layout")
        self.label_2 = QtWidgets.QLabel(self.toolWidget)
        self.label_2.setTextFormat(QtCore.Qt.RichText)
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName("label_2")
        self.point_y_layout.addWidget(self.label_2)
        self.Y_coordinate = QtWidgets.QDoubleSpinBox(self.toolWidget)
        self.Y_coordinate.setProperty("showGroupSeparator", False)
        self.Y_coordinate.setMinimum(-10000.0)
        self.Y_coordinate.setMaximum(10000.0)
        self.Y_coordinate.setObjectName("Y_coordinate")
        self.point_y_layout.addWidget(self.Y_coordinate)
        self.horizontalLayout.addLayout(self.point_y_layout)
        self.Point_add_button = QtWidgets.QPushButton(self.toolWidget)
        self.Point_add_button.setObjectName("Point_add_button")
        self.horizontalLayout.addWidget(self.Point_add_button)
        self.pointLayout.addLayout(self.horizontalLayout)
        self.verticalLayout.addLayout(self.pointLayout)
        self.tabLayout = QtWidgets.QVBoxLayout()
        self.tabLayout.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.tabLayout.setObjectName("tabLayout")
        self.Tab = QtWidgets.QTabWidget(self.toolWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Tab.sizePolicy().hasHeightForWidth())
        self.Tab.setSizePolicy(sizePolicy)
        self.Tab.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.Tab.setMovable(False)
        self.Tab.setObjectName("Tab")
        self.Entites = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entites.sizePolicy().hasHeightForWidth())
        self.Entites.setSizePolicy(sizePolicy)
        self.Entites.setObjectName("Entites")
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.Entites)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(10, 10, 371, 221))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.entityLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.entityLayout.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.entityLayout.setContentsMargins(0, 0, 0, 0)
        self.entityLayout.setObjectName("entityLayout")
        self.Entiteis_Link = QtWidgets.QTableWidget(self.verticalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entiteis_Link.sizePolicy().hasHeightForWidth())
        self.Entiteis_Link.setSizePolicy(sizePolicy)
        self.Entiteis_Link.setMaximumSize(QtCore.QSize(16777215, 1000))
        self.Entiteis_Link.setAcceptDrops(False)
        self.Entiteis_Link.setAutoFillBackground(True)
        self.Entiteis_Link.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Entiteis_Link.setRowCount(0)
        self.Entiteis_Link.setColumnCount(4)
        self.Entiteis_Link.setObjectName("Entiteis_Link")
        item = QtWidgets.QTableWidgetItem()
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/line.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon2)
        self.Entiteis_Link.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Link.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Link.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Link.setHorizontalHeaderItem(3, item)
        self.Entiteis_Link.horizontalHeader().setDefaultSectionSize(70)
        self.Entiteis_Link.horizontalHeader().setMinimumSectionSize(65)
        self.entityLayout.addWidget(self.Entiteis_Link)
        self.Entiteis_Stay_Chain = QtWidgets.QTableWidget(self.verticalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entiteis_Stay_Chain.sizePolicy().hasHeightForWidth())
        self.Entiteis_Stay_Chain.setSizePolicy(sizePolicy)
        self.Entiteis_Stay_Chain.setAutoFillBackground(True)
        self.Entiteis_Stay_Chain.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Entiteis_Stay_Chain.setRowCount(0)
        self.Entiteis_Stay_Chain.setColumnCount(7)
        self.Entiteis_Stay_Chain.setObjectName("Entiteis_Stay_Chain")
        item = QtWidgets.QTableWidgetItem()
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/equal.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon3)
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(6, item)
        self.Entiteis_Stay_Chain.horizontalHeader().setDefaultSectionSize(70)
        self.Entiteis_Stay_Chain.horizontalHeader().setMinimumSectionSize(65)
        self.entityLayout.addWidget(self.Entiteis_Stay_Chain)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/trim.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Tab.addTab(self.Entites, icon4, "")
        self.Simulate = QtWidgets.QWidget()
        self.Simulate.setObjectName("Simulate")
        self.layoutWidget = QtWidgets.QWidget(self.Simulate)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 10, 381, 219))
        self.layoutWidget.setObjectName("layoutWidget")
        self.simulateLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.simulateLayout.setContentsMargins(0, 0, 0, 0)
        self.simulateLayout.setObjectName("simulateLayout")
        self.Simulate_tab = QtWidgets.QTabWidget(self.layoutWidget)
        self.Simulate_tab.setObjectName("Simulate_tab")
        self.Shaft_tab = QtWidgets.QWidget()
        self.Shaft_tab.setObjectName("Shaft_tab")
        self.Drive_Shaft = QtWidgets.QTableWidget(self.Shaft_tab)
        self.Drive_Shaft.setGeometry(QtCore.QRect(10, 10, 351, 131))
        self.Drive_Shaft.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Drive_Shaft.setObjectName("Drive_Shaft")
        self.Drive_Shaft.setColumnCount(5)
        self.Drive_Shaft.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/circle.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon5)
        self.Drive_Shaft.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Drive_Shaft.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Drive_Shaft.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Drive_Shaft.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Drive_Shaft.setHorizontalHeaderItem(4, item)
        self.Drive_Shaft.horizontalHeader().setDefaultSectionSize(85)
        self.Drive_Shaft.horizontalHeader().setMinimumSectionSize(70)
        self.Simulate_tab.addTab(self.Shaft_tab, "")
        self.Slider_tab = QtWidgets.QWidget()
        self.Slider_tab.setObjectName("Slider_tab")
        self.Slider = QtWidgets.QTableWidget(self.Slider_tab)
        self.Slider.setGeometry(QtCore.QRect(10, 10, 351, 131))
        self.Slider.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Slider.setObjectName("Slider")
        self.Slider.setColumnCount(3)
        self.Slider.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/pointonx.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon6)
        self.Slider.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Slider.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Slider.setHorizontalHeaderItem(2, item)
        self.Slider.horizontalHeader().setDefaultSectionSize(85)
        self.Slider.horizontalHeader().setMinimumSectionSize(70)
        self.Simulate_tab.addTab(self.Slider_tab, "")
        self.Extendable_rod_tab = QtWidgets.QWidget()
        self.Extendable_rod_tab.setObjectName("Extendable_rod_tab")
        self.Rod = QtWidgets.QTableWidget(self.Extendable_rod_tab)
        self.Rod.setGeometry(QtCore.QRect(10, 10, 351, 131))
        self.Rod.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Rod.setObjectName("Rod")
        self.Rod.setColumnCount(5)
        self.Rod.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/spring.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon7)
        self.Rod.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Rod.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Rod.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Rod.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Rod.setHorizontalHeaderItem(4, item)
        self.Rod.horizontalHeader().setDefaultSectionSize(80)
        self.Rod.horizontalHeader().setMinimumSectionSize(70)
        self.Simulate_tab.addTab(self.Extendable_rod_tab, "")
        self.simulateLayout.addWidget(self.Simulate_tab)
        self.Simulation_Options_button = QtWidgets.QPushButton(self.layoutWidget)
        self.Simulation_Options_button.setObjectName("Simulation_Options_button")
        self.simulateLayout.addWidget(self.Simulation_Options_button)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/arc.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Tab.addTab(self.Simulate, icon8, "")
        self.Style = QtWidgets.QWidget()
        self.Style.setObjectName("Style")
        self.verticalLayoutWidget_6 = QtWidgets.QWidget(self.Style)
        self.verticalLayoutWidget_6.setGeometry(QtCore.QRect(10, 10, 371, 221))
        self.verticalLayoutWidget_6.setObjectName("verticalLayoutWidget_6")
        self.styleLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_6)
        self.styleLayout.setContentsMargins(0, 0, 0, 0)
        self.styleLayout.setObjectName("styleLayout")
        self.Entiteis_Point_Style = QtWidgets.QTableWidget(self.verticalLayoutWidget_6)
        self.Entiteis_Point_Style.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked)
        self.Entiteis_Point_Style.setColumnCount(4)
        self.Entiteis_Point_Style.setObjectName("Entiteis_Point_Style")
        self.Entiteis_Point_Style.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setIcon(icon1)
        self.Entiteis_Point_Style.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsEnabled)
        self.Entiteis_Point_Style.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setItem(0, 3, item)
        self.Entiteis_Point_Style.horizontalHeader().setDefaultSectionSize(65)
        self.Entiteis_Point_Style.horizontalHeader().setMinimumSectionSize(50)
        self.styleLayout.addWidget(self.Entiteis_Point_Style)
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget_6)
        self.label_4.setTextFormat(QtCore.Qt.RichText)
        self.label_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_4.setObjectName("label_4")
        self.styleLayout.addWidget(self.label_4)
        self.styleButtonLayout = QtWidgets.QHBoxLayout()
        self.styleButtonLayout.setObjectName("styleButtonLayout")
        self.Color_set = QtWidgets.QPushButton(self.verticalLayoutWidget_6)
        self.Color_set.setObjectName("Color_set")
        self.styleButtonLayout.addWidget(self.Color_set)
        self.Repaint = QtWidgets.QPushButton(self.verticalLayoutWidget_6)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/bezier.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Repaint.setIcon(icon9)
        self.Repaint.setObjectName("Repaint")
        self.styleButtonLayout.addWidget(self.Repaint)
        self.styleLayout.addLayout(self.styleButtonLayout)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/char-3-radio-true.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Tab.addTab(self.Style, icon10, "")
        self.tabLayout.addWidget(self.Tab)
        self.verticalLayout.addLayout(self.tabLayout)
        self.horizontalLayout_2.addWidget(self.toolWidget)
        self.mplLayout = QtWidgets.QVBoxLayout()
        self.mplLayout.setObjectName("mplLayout")
        self.temp_wiget = QtWidgets.QTableWidget(self.centralWidget)
        self.temp_wiget.setObjectName("temp_wiget")
        self.temp_wiget.setColumnCount(0)
        self.temp_wiget.setRowCount(0)
        self.mplLayout.addWidget(self.temp_wiget)
        self.mplwindow = QtWidgets.QWidget(self.centralWidget)
        self.mplwindow.setObjectName("mplwindow")
        self.mplLayout.addWidget(self.mplwindow)
        self.horizontalLayout_2.addLayout(self.mplLayout)
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 762, 23))
        self.menuBar.setDefaultUp(False)
        self.menuBar.setNativeMenuBar(True)
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setStatusTip("")
        self.menuFile.setObjectName("menuFile")
        self.menu_Draw = QtWidgets.QMenu(self.menuBar)
        self.menu_Draw.setObjectName("menu_Draw")
        self.menu_Options = QtWidgets.QMenu(self.menuBar)
        self.menu_Options.setObjectName("menu_Options")
        self.menu_Help = QtWidgets.QMenu(self.menuBar)
        self.menu_Help.setObjectName("menu_Help")
        self.menu_Simulation = QtWidgets.QMenu(self.menuBar)
        self.menu_Simulation.setObjectName("menu_Simulation")
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.action_New_Workbook = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/step-rotate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_New_Workbook.setIcon(icon11)
        self.action_New_Workbook.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.action_New_Workbook.setObjectName("action_New_Workbook")
        self.action_Load_Workbook = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/step-translate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Load_Workbook.setIcon(icon12)
        self.action_Load_Workbook.setObjectName("action_Load_Workbook")
        self.action_New_Point = QtWidgets.QAction(MainWindow)
        self.action_New_Point.setIcon(icon1)
        self.action_New_Point.setObjectName("action_New_Point")
        self.action_New_Line = QtWidgets.QAction(MainWindow)
        self.action_New_Line.setIcon(icon2)
        self.action_New_Line.setObjectName("action_New_Line")
        self.action_Output_to_Script = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/edges.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Output_to_Script.setIcon(icon13)
        self.action_Output_to_Script.setObjectName("action_Output_to_Script")
        self.actionE_xit = QtWidgets.QAction(MainWindow)
        self.actionE_xit.setCheckable(False)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionE_xit.setIcon(icon14)
        self.actionE_xit.setObjectName("actionE_xit")
        self.action_Get_Help = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/kmol.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Get_Help.setIcon(icon15)
        self.action_Get_Help.setObjectName("action_Get_Help")
        self.action_Prefenece = QtWidgets.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/shaded.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Prefenece.setIcon(icon16)
        self.action_Prefenece.setObjectName("action_Prefenece")
        self.actionGit_hub_Site = QtWidgets.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/github-24.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGit_hub_Site.setIcon(icon17)
        self.actionGit_hub_Site.setObjectName("actionGit_hub_Site")
        self.action_About_Pyslvs = QtWidgets.QAction(MainWindow)
        self.action_About_Pyslvs.setIcon(icon)
        self.action_About_Pyslvs.setObjectName("action_About_Pyslvs")
        self.action_Set_Drive_Shaft = QtWidgets.QAction(MainWindow)
        self.action_Set_Drive_Shaft.setIcon(icon5)
        self.action_Set_Drive_Shaft.setObjectName("action_Set_Drive_Shaft")
        self.actionGithub_Wiki = QtWidgets.QAction(MainWindow)
        self.actionGithub_Wiki.setIcon(icon17)
        self.actionGithub_Wiki.setObjectName("actionGithub_Wiki")
        self.action_Highlight_Drive_Shaft_Point = QtWidgets.QAction(MainWindow)
        self.action_Highlight_Drive_Shaft_Point.setCheckable(True)
        self.action_Highlight_Drive_Shaft_Point.setChecked(True)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icons/char-1-check-true.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon18.addPixmap(QtGui.QPixmap(":/icons/char-0-check-false.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Highlight_Drive_Shaft_Point.setIcon(icon18)
        self.action_Highlight_Drive_Shaft_Point.setObjectName("action_Highlight_Drive_Shaft_Point")
        self.actionMi_nimized = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icons/minmized.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMi_nimized.setIcon(icon19)
        self.actionMi_nimized.setObjectName("actionMi_nimized")
        self.actionM_axmized = QtWidgets.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/icons/maxmized.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionM_axmized.setIcon(icon20)
        self.actionM_axmized.setObjectName("actionM_axmized")
        self.action_Full_Screen = QtWidgets.QAction(MainWindow)
        self.action_Full_Screen.setCheckable(False)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/icons/fullscreen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Full_Screen.setIcon(icon21)
        self.action_Full_Screen.setObjectName("action_Full_Screen")
        self.actionNormalmized = QtWidgets.QAction(MainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/icons/normalsized.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNormalmized.setIcon(icon22)
        self.actionNormalmized.setObjectName("actionNormalmized")
        self.action_Output_to_Picture = QtWidgets.QAction(MainWindow)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/icons/faces.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Output_to_Picture.setIcon(icon23)
        self.action_Output_to_Picture.setObjectName("action_Output_to_Picture")
        self.action_Output_Coordinate_to_Text_File = QtWidgets.QAction(MainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/icons/CSV.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Output_Coordinate_to_Text_File.setIcon(icon24)
        self.action_Output_Coordinate_to_Text_File.setObjectName("action_Output_Coordinate_to_Text_File")
        self.action_Angle_Simulation = QtWidgets.QAction(MainWindow)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/icons/angle.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Angle_Simulation.setIcon(icon25)
        self.action_Angle_Simulation.setObjectName("action_Angle_Simulation")
        self.actionSimulation_Options = QtWidgets.QAction(MainWindow)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/icons/other-supp.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSimulation_Options.setIcon(icon26)
        self.actionSimulation_Options.setObjectName("actionSimulation_Options")
        self.action_See_Error_Logs = QtWidgets.QAction(MainWindow)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/icons/ref.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_See_Error_Logs.setIcon(icon27)
        self.action_See_Error_Logs.setObjectName("action_See_Error_Logs")
        self.action_Triangle = QtWidgets.QAction(MainWindow)
        self.action_Triangle.setObjectName("action_Triangle")
        self.action_Quadrilateral = QtWidgets.QAction(MainWindow)
        self.action_Quadrilateral.setObjectName("action_Quadrilateral")
        self.action_Pentagon = QtWidgets.QAction(MainWindow)
        self.action_Pentagon.setObjectName("action_Pentagon")
        self.action_Hexagon = QtWidgets.QAction(MainWindow)
        self.action_Hexagon.setObjectName("action_Hexagon")
        self.actionH_eptagon = QtWidgets.QAction(MainWindow)
        self.actionH_eptagon.setObjectName("actionH_eptagon")
        self.action_Octagon = QtWidgets.QAction(MainWindow)
        self.action_Octagon.setObjectName("action_Octagon")
        self.action_Custom = QtWidgets.QAction(MainWindow)
        self.action_Custom.setObjectName("action_Custom")
        self.action_New_Stay_Chain = QtWidgets.QAction(MainWindow)
        self.action_New_Stay_Chain.setIcon(icon3)
        self.action_New_Stay_Chain.setObjectName("action_New_Stay_Chain")
        self.action_Appearance = QtWidgets.QAction(MainWindow)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/icons/mesh.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Appearance.setIcon(icon28)
        self.action_Appearance.setObjectName("action_Appearance")
        self.action_See_Python_Scripts = QtWidgets.QAction(MainWindow)
        self.action_See_Python_Scripts.setIcon(icon13)
        self.action_See_Python_Scripts.setObjectName("action_See_Python_Scripts")
        self.action_About_Python_Solvspace = QtWidgets.QAction(MainWindow)
        self.action_About_Python_Solvspace.setIcon(icon)
        self.action_About_Python_Solvspace.setObjectName("action_About_Python_Solvspace")
        self.actionDelete_Point = QtWidgets.QAction(MainWindow)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/icons/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Point.setIcon(icon29)
        self.actionDelete_Point.setObjectName("actionDelete_Point")
        self.actionDelete_Linkage = QtWidgets.QAction(MainWindow)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/icons/deleteline.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Linkage.setIcon(icon30)
        self.actionDelete_Linkage.setObjectName("actionDelete_Linkage")
        self.actionDelete_Stay_Chain = QtWidgets.QAction(MainWindow)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/icons/deletechain.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Stay_Chain.setIcon(icon31)
        self.actionDelete_Stay_Chain.setObjectName("actionDelete_Stay_Chain")
        self.actionEdit_Point = QtWidgets.QAction(MainWindow)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/icons/editpoint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEdit_Point.setIcon(icon32)
        self.actionEdit_Point.setObjectName("actionEdit_Point")
        self.actionEdit_Linkage = QtWidgets.QAction(MainWindow)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/icons/length.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEdit_Linkage.setIcon(icon33)
        self.actionEdit_Linkage.setObjectName("actionEdit_Linkage")
        self.actionEdit_Stay_Chain = QtWidgets.QAction(MainWindow)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/icons/editchain.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEdit_Stay_Chain.setIcon(icon34)
        self.actionEdit_Stay_Chain.setObjectName("actionEdit_Stay_Chain")
        self.actionHow_to_use = QtWidgets.QAction(MainWindow)
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/icons/assemble.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHow_to_use.setIcon(icon35)
        self.actionHow_to_use.setObjectName("actionHow_to_use")
        self.action_Set_Slider = QtWidgets.QAction(MainWindow)
        self.action_Set_Slider.setIcon(icon6)
        self.action_Set_Slider.setObjectName("action_Set_Slider")
        self.actionColor_Settings = QtWidgets.QAction(MainWindow)
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/icons/in3d.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionColor_Settings.setIcon(icon36)
        self.actionColor_Settings.setObjectName("actionColor_Settings")
        self.action_Edit_Drive_Shaft = QtWidgets.QAction(MainWindow)
        icon37 = QtGui.QIcon()
        icon37.addPixmap(QtGui.QPixmap(":/icons/editshaft.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Edit_Drive_Shaft.setIcon(icon37)
        self.action_Edit_Drive_Shaft.setObjectName("action_Edit_Drive_Shaft")
        self.action_Edit_Slider = QtWidgets.QAction(MainWindow)
        icon38 = QtGui.QIcon()
        icon38.addPixmap(QtGui.QPixmap(":/icons/editslider.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Edit_Slider.setIcon(icon38)
        self.action_Edit_Slider.setObjectName("action_Edit_Slider")
        self.actionDelete_Drive_Shaft = QtWidgets.QAction(MainWindow)
        icon39 = QtGui.QIcon()
        icon39.addPixmap(QtGui.QPixmap(":/icons/deleteshaft.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Drive_Shaft.setIcon(icon39)
        self.actionDelete_Drive_Shaft.setObjectName("actionDelete_Drive_Shaft")
        self.actionDelete_Slider = QtWidgets.QAction(MainWindow)
        icon40 = QtGui.QIcon()
        icon40.addPixmap(QtGui.QPixmap(":/icons/deleteslider.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Slider.setIcon(icon40)
        self.actionDelete_Slider.setObjectName("actionDelete_Slider")
        self.actionReload_Drawing = QtWidgets.QAction(MainWindow)
        icon41 = QtGui.QIcon()
        icon41.addPixmap(QtGui.QPixmap(":/icons/sketch-in-plane.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionReload_Drawing.setIcon(icon41)
        self.actionReload_Drawing.setObjectName("actionReload_Drawing")
        self.action_Output_to_S_QLite_Data_Base = QtWidgets.QAction(MainWindow)
        icon42 = QtGui.QIcon()
        icon42.addPixmap(QtGui.QPixmap(":/icons/SQL_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Output_to_S_QLite_Data_Base.setIcon(icon42)
        self.action_Output_to_S_QLite_Data_Base.setObjectName("action_Output_to_S_QLite_Data_Base")
        self.action_Set_Rod = QtWidgets.QAction(MainWindow)
        self.action_Set_Rod.setIcon(icon7)
        self.action_Set_Rod.setObjectName("action_Set_Rod")
        self.action_Edit_Piston_Spring = QtWidgets.QAction(MainWindow)
        icon43 = QtGui.QIcon()
        icon43.addPixmap(QtGui.QPixmap(":/icons/editrod.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Edit_Piston_Spring.setIcon(icon43)
        self.action_Edit_Piston_Spring.setObjectName("action_Edit_Piston_Spring")
        self.actionDelete_Piston_Spring = QtWidgets.QAction(MainWindow)
        icon44 = QtGui.QIcon()
        icon44.addPixmap(QtGui.QPixmap(":/icons/deleterod.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Piston_Spring.setIcon(icon44)
        self.actionDelete_Piston_Spring.setObjectName("actionDelete_Piston_Spring")
        self.menuFile.addAction(self.action_New_Workbook)
        self.menuFile.addAction(self.action_Load_Workbook)
        self.menuFile.addAction(self.action_Output_to_Picture)
        self.menuFile.addAction(self.action_Output_to_Script)
        self.menuFile.addAction(self.action_Output_Coordinate_to_Text_File)
        self.menuFile.addAction(self.action_Output_to_S_QLite_Data_Base)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionMi_nimized)
        self.menuFile.addAction(self.actionM_axmized)
        self.menuFile.addAction(self.actionNormalmized)
        self.menuFile.addAction(self.action_Full_Screen)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionE_xit)
        self.menu_Draw.addAction(self.action_New_Point)
        self.menu_Draw.addAction(self.action_New_Line)
        self.menu_Draw.addAction(self.action_New_Stay_Chain)
        self.menu_Draw.addSeparator()
        self.menu_Draw.addAction(self.actionEdit_Point)
        self.menu_Draw.addAction(self.actionEdit_Linkage)
        self.menu_Draw.addAction(self.actionEdit_Stay_Chain)
        self.menu_Draw.addSeparator()
        self.menu_Draw.addAction(self.actionDelete_Point)
        self.menu_Draw.addAction(self.actionDelete_Linkage)
        self.menu_Draw.addAction(self.actionDelete_Stay_Chain)
        self.menu_Draw.addSeparator()
        self.menu_Draw.addAction(self.actionReload_Drawing)
        self.menu_Options.addAction(self.action_Highlight_Drive_Shaft_Point)
        self.menu_Options.addAction(self.action_See_Python_Scripts)
        self.menu_Options.addSeparator()
        self.menu_Options.addAction(self.action_Appearance)
        self.menu_Options.addAction(self.action_Prefenece)
        self.menu_Help.addAction(self.actionHow_to_use)
        self.menu_Help.addAction(self.actionColor_Settings)
        self.menu_Help.addSeparator()
        self.menu_Help.addAction(self.action_Get_Help)
        self.menu_Help.addAction(self.actionGit_hub_Site)
        self.menu_Help.addAction(self.actionGithub_Wiki)
        self.menu_Help.addSeparator()
        self.menu_Help.addAction(self.action_About_Pyslvs)
        self.menu_Help.addAction(self.action_About_Python_Solvspace)
        self.menu_Simulation.addAction(self.action_Angle_Simulation)
        self.menu_Simulation.addAction(self.action_See_Error_Logs)
        self.menu_Simulation.addSeparator()
        self.menu_Simulation.addAction(self.action_Set_Drive_Shaft)
        self.menu_Simulation.addAction(self.action_Set_Slider)
        self.menu_Simulation.addAction(self.action_Set_Rod)
        self.menu_Simulation.addSeparator()
        self.menu_Simulation.addAction(self.action_Edit_Drive_Shaft)
        self.menu_Simulation.addAction(self.action_Edit_Slider)
        self.menu_Simulation.addAction(self.action_Edit_Piston_Spring)
        self.menu_Simulation.addSeparator()
        self.menu_Simulation.addAction(self.actionDelete_Drive_Shaft)
        self.menu_Simulation.addAction(self.actionDelete_Slider)
        self.menu_Simulation.addAction(self.actionDelete_Piston_Spring)
        self.menu_Simulation.addSeparator()
        self.menu_Simulation.addAction(self.actionSimulation_Options)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menu_Draw.menuAction())
        self.menuBar.addAction(self.menu_Simulation.menuAction())
        self.menuBar.addAction(self.menu_Options.menuAction())
        self.menuBar.addAction(self.menu_Help.menuAction())

        self.retranslateUi(MainWindow)
        self.Tab.setCurrentIndex(0)
        self.Simulate_tab.setCurrentIndex(0)
        self.actionM_axmized.triggered.connect(MainWindow.showMaximized)
        self.actionMi_nimized.triggered.connect(MainWindow.showMinimized)
        self.action_Full_Screen.triggered.connect(MainWindow.showFullScreen)
        self.actionNormalmized.triggered.connect(MainWindow.showNormal)
        self.actionE_xit.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.X_coordinate, self.Y_coordinate)
        MainWindow.setTabOrder(self.Y_coordinate, self.Point_add_button)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Pyslvs"))
        self.Entiteis_Point.setStatusTip(_translate("MainWindow", "All Points in this workbook."))
        item = self.Entiteis_Point.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Origin"))
        item = self.Entiteis_Point.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Entiteis_Point.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "X"))
        item = self.Entiteis_Point.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Y"))
        item = self.Entiteis_Point.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Fixed"))
        __sortingEnabled = self.Entiteis_Point.isSortingEnabled()
        self.Entiteis_Point.setSortingEnabled(False)
        item = self.Entiteis_Point.item(0, 0)
        item.setText(_translate("MainWindow", "Point0"))
        item = self.Entiteis_Point.item(0, 1)
        item.setText(_translate("MainWindow", "0.00"))
        item = self.Entiteis_Point.item(0, 2)
        item.setText(_translate("MainWindow", "0.00"))
        self.Entiteis_Point.setSortingEnabled(__sortingEnabled)
        self.label.setText(_translate("MainWindow", "x coordinate"))
        self.X_coordinate.setStatusTip(_translate("MainWindow", "X coordinate of Next Point."))
        self.label_2.setText(_translate("MainWindow", "y coordinate"))
        self.Y_coordinate.setStatusTip(_translate("MainWindow", "X coordinate of Next Point."))
        self.Point_add_button.setStatusTip(_translate("MainWindow", "Quick insert a joint point."))
        self.Point_add_button.setText(_translate("MainWindow", "Add a Point"))
        self.Entiteis_Link.setStatusTip(_translate("MainWindow", "All Links in this workbook. Needs two point."))
        item = self.Entiteis_Link.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Entiteis_Link.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Start Side"))
        item = self.Entiteis_Link.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "End Side"))
        item = self.Entiteis_Link.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Length"))
        self.Entiteis_Stay_Chain.setStatusTip(_translate("MainWindow", "All Stay Chains in this workbook. Needs three point."))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Point[1]"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Point[2]"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Point[3]"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "[1]-[2]"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "[2]-[3]"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "[1]-[3]"))
        self.Tab.setTabText(self.Tab.indexOf(self.Entites), _translate("MainWindow", "Entites"))
        self.Drive_Shaft.setStatusTip(_translate("MainWindow", "All drive shaft will show here. Needs two point."))
        item = self.Drive_Shaft.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Drive_Shaft.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Shaft Center"))
        item = self.Drive_Shaft.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "References"))
        item = self.Drive_Shaft.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Start Angle"))
        item = self.Drive_Shaft.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "End Angle"))
        self.Simulate_tab.setTabText(self.Simulate_tab.indexOf(self.Shaft_tab), _translate("MainWindow", "Shaft"))
        self.Slider.setStatusTip(_translate("MainWindow", "All slider will show here. Needs a point and a link."))
        item = self.Slider.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Slider.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Slider Center"))
        item = self.Slider.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "References"))
        self.Simulate_tab.setTabText(self.Simulate_tab.indexOf(self.Slider_tab), _translate("MainWindow", "Slider"))
        self.Rod.setStatusTip(_translate("MainWindow", "All extendable rod will show here. Needs two point."))
        item = self.Rod.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Rod.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Start side"))
        item = self.Rod.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "End side"))
        item = self.Rod.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Min"))
        item = self.Rod.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Max"))
        self.Simulate_tab.setTabText(self.Simulate_tab.indexOf(self.Extendable_rod_tab), _translate("MainWindow", "Piston / Spring"))
        self.Simulation_Options_button.setStatusTip(_translate("MainWindow", "Set behave of shaft or silder in simulation."))
        self.Simulation_Options_button.setText(_translate("MainWindow", "Simulation Options..."))
        self.Tab.setTabText(self.Tab.indexOf(self.Simulate), _translate("MainWindow", "Simulate"))
        self.Entiteis_Point_Style.setStatusTip(_translate("MainWindow", "All points style settings will show here."))
        item = self.Entiteis_Point_Style.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Origin"))
        item = self.Entiteis_Point_Style.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Entiteis_Point_Style.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Color"))
        item = self.Entiteis_Point_Style.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Ring Size"))
        item = self.Entiteis_Point_Style.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Ring Color"))
        __sortingEnabled = self.Entiteis_Point_Style.isSortingEnabled()
        self.Entiteis_Point_Style.setSortingEnabled(False)
        item = self.Entiteis_Point_Style.item(0, 0)
        item.setText(_translate("MainWindow", "Point0"))
        item = self.Entiteis_Point_Style.item(0, 1)
        item.setText(_translate("MainWindow", "RED"))
        item = self.Entiteis_Point_Style.item(0, 2)
        item.setText(_translate("MainWindow", "3"))
        item = self.Entiteis_Point_Style.item(0, 3)
        item.setText(_translate("MainWindow", "RED"))
        self.Entiteis_Point_Style.setSortingEnabled(__sortingEnabled)
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt;\">Double-click to edit the form.</span></p></body></html>"))
        self.Color_set.setText(_translate("MainWindow", "Color Settings"))
        self.Repaint.setText(_translate("MainWindow", "Apply"))
        self.Tab.setTabText(self.Tab.indexOf(self.Style), _translate("MainWindow", "Point Style"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menu_Draw.setTitle(_translate("MainWindow", "&Draw"))
        self.menu_Options.setTitle(_translate("MainWindow", "&Options"))
        self.menu_Help.setTitle(_translate("MainWindow", "&Help"))
        self.menu_Simulation.setTitle(_translate("MainWindow", "&Simulation"))
        self.action_New_Workbook.setText(_translate("MainWindow", "&New Workbook"))
        self.action_New_Workbook.setStatusTip(_translate("MainWindow", "Reset to a new wrokbook."))
        self.action_New_Workbook.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.action_Load_Workbook.setText(_translate("MainWindow", "&Load Workbook (*.csv)"))
        self.action_Load_Workbook.setStatusTip(_translate("MainWindow", "Load workbook by exist file."))
        self.action_Load_Workbook.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_New_Point.setText(_translate("MainWindow", "New Joint &Point"))
        self.action_New_Point.setStatusTip(_translate("MainWindow", "Add a new point representative of a node on a machine."))
        self.action_New_Point.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.action_New_Line.setText(_translate("MainWindow", "New &Linkage"))
        self.action_New_Line.setStatusTip(_translate("MainWindow", "Add  a link between two points."))
        self.action_Output_to_Script.setText(_translate("MainWindow", "Output to &Script"))
        self.action_Output_to_Script.setStatusTip(_translate("MainWindow", "Output to a Python 3 slvs module script."))
        self.actionE_xit.setText(_translate("MainWindow", "E&xit"))
        self.actionE_xit.setStatusTip(_translate("MainWindow", "Exit Pyslvs."))
        self.action_Get_Help.setText(_translate("MainWindow", "&Get Help on Kmolab"))
        self.action_Get_Help.setStatusTip(_translate("MainWindow", "Goto Kmolab learn about more."))
        self.action_Prefenece.setText(_translate("MainWindow", "&Preferences..."))
        self.action_Prefenece.setStatusTip(_translate("MainWindow", "Some options in this program."))
        self.actionGit_hub_Site.setText(_translate("MainWindow", "Git&hub Site"))
        self.actionGit_hub_Site.setStatusTip(_translate("MainWindow", "Goto Github storage of Pyslvs."))
        self.action_About_Pyslvs.setText(_translate("MainWindow", "About &Pyslvs"))
        self.action_About_Pyslvs.setStatusTip(_translate("MainWindow", "Version and introduction of Pyslvs."))
        self.action_Set_Drive_Shaft.setText(_translate("MainWindow", "Set &Drive Shaft"))
        self.action_Set_Drive_Shaft.setStatusTip(_translate("MainWindow", "Set a point as a Drive Shaft."))
        self.actionGithub_Wiki.setText(_translate("MainWindow", "Github &Wiki"))
        self.actionGithub_Wiki.setStatusTip(_translate("MainWindow", "See our Wiki on Github."))
        self.action_Highlight_Drive_Shaft_Point.setText(_translate("MainWindow", "High&light Drive Shaft Point"))
        self.action_Highlight_Drive_Shaft_Point.setStatusTip(_translate("MainWindow", "Highlight Drive Shaft Point."))
        self.actionMi_nimized.setText(_translate("MainWindow", "M&inimized"))
        self.actionMi_nimized.setStatusTip(_translate("MainWindow", "Minimized the window."))
        self.actionM_axmized.setText(_translate("MainWindow", "M&axmized"))
        self.actionM_axmized.setStatusTip(_translate("MainWindow", "Maxmized the window."))
        self.action_Full_Screen.setText(_translate("MainWindow", "&Full Screen"))
        self.action_Full_Screen.setStatusTip(_translate("MainWindow", "Let the window truns to full screen."))
        self.actionNormalmized.setText(_translate("MainWindow", "&Normal"))
        self.actionNormalmized.setStatusTip(_translate("MainWindow", "Let the window back to normal."))
        self.action_Output_to_Picture.setText(_translate("MainWindow", "Output to &Picture"))
        self.action_Output_Coordinate_to_Text_File.setText(_translate("MainWindow", "Output Workbook to &CSV File"))
        self.action_Output_Coordinate_to_Text_File.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_Angle_Simulation.setText(_translate("MainWindow", "Start &Angle Simulation"))
        self.action_Angle_Simulation.setStatusTip(_translate("MainWindow", "Start a simulation by your settings."))
        self.actionSimulation_Options.setText(_translate("MainWindow", "Simulation &Options..."))
        self.actionSimulation_Options.setStatusTip(_translate("MainWindow", "Simulation options."))
        self.action_See_Error_Logs.setText(_translate("MainWindow", "See Error &Logs"))
        self.action_See_Error_Logs.setStatusTip(_translate("MainWindow", "See error logs in dialog box."))
        self.action_Triangle.setText(_translate("MainWindow", "&Triangle (3)"))
        self.action_Quadrilateral.setText(_translate("MainWindow", "&Quadrilateral (4)"))
        self.action_Pentagon.setText(_translate("MainWindow", "&Pentagon (5)"))
        self.action_Hexagon.setText(_translate("MainWindow", "&Hexagon (6)"))
        self.actionH_eptagon.setText(_translate("MainWindow", "H&eptagon (7)"))
        self.action_Octagon.setText(_translate("MainWindow", "&Octagon (8)"))
        self.action_Custom.setText(_translate("MainWindow", "&Custom..."))
        self.action_New_Stay_Chain.setText(_translate("MainWindow", "New Stay &Chain"))
        self.action_New_Stay_Chain.setStatusTip(_translate("MainWindow", "Add a stay chain by existing points."))
        self.action_Appearance.setText(_translate("MainWindow", "&Appearance..."))
        self.action_Appearance.setStatusTip(_translate("MainWindow", "Change appearance for all Points."))
        self.action_See_Python_Scripts.setText(_translate("MainWindow", "See &Python Scripts"))
        self.action_See_Python_Scripts.setStatusTip(_translate("MainWindow", "See Python scripts in this status."))
        self.action_About_Python_Solvspace.setText(_translate("MainWindow", "About Python &Solvspace"))
        self.actionDelete_Point.setText(_translate("MainWindow", "Delet Point"))
        self.actionDelete_Point.setStatusTip(_translate("MainWindow", "Delete an Existing point."))
        self.actionDelete_Linkage.setText(_translate("MainWindow", "Delet Linkage"))
        self.actionDelete_Linkage.setStatusTip(_translate("MainWindow", "Delete an Existing linkage."))
        self.actionDelete_Stay_Chain.setText(_translate("MainWindow", "Delete Stay Chain"))
        self.actionDelete_Stay_Chain.setStatusTip(_translate("MainWindow", "Delete an Existing stay chain."))
        self.actionEdit_Point.setText(_translate("MainWindow", "Edit Point"))
        self.actionEdit_Point.setStatusTip(_translate("MainWindow", "Edit an Existing point."))
        self.actionEdit_Linkage.setText(_translate("MainWindow", "Edit Linkage"))
        self.actionEdit_Linkage.setStatusTip(_translate("MainWindow", "Edit an Existing linkage."))
        self.actionEdit_Stay_Chain.setText(_translate("MainWindow", "Edit Stay Chain"))
        self.actionEdit_Stay_Chain.setStatusTip(_translate("MainWindow", "Edit an Existing stay chain."))
        self.actionHow_to_use.setText(_translate("MainWindow", "&How to use?"))
        self.actionHow_to_use.setStatusTip(_translate("MainWindow", "See concept about Pyslvs."))
        self.action_Set_Slider.setText(_translate("MainWindow", "Set &Slider"))
        self.action_Set_Slider.setStatusTip(_translate("MainWindow", "Set a point as a Slider center."))
        self.actionColor_Settings.setText(_translate("MainWindow", "&Color Settings"))
        self.actionColor_Settings.setStatusTip(_translate("MainWindow", "See which color value can use."))
        self.action_Edit_Drive_Shaft.setText(_translate("MainWindow", "Edit Drive Shaft"))
        self.action_Edit_Slider.setText(_translate("MainWindow", "Edit Slider"))
        self.actionDelete_Drive_Shaft.setText(_translate("MainWindow", "Delete Drive Shaft"))
        self.actionDelete_Slider.setText(_translate("MainWindow", "Delete Slider"))
        self.actionReload_Drawing.setText(_translate("MainWindow", "Reload Drawing"))
        self.action_Output_to_S_QLite_Data_Base.setText(_translate("MainWindow", "Output to S&QLite Data Base"))
        self.action_Set_Rod.setText(_translate("MainWindow", "Set &Piston / Spring"))
        self.action_Set_Rod.setStatusTip(_translate("MainWindow", "Add  a extendable rod between two points."))
        self.action_Edit_Piston_Spring.setText(_translate("MainWindow", "Edit Piston / Spring"))
        self.actionDelete_Piston_Spring.setText(_translate("MainWindow", "Delete Piston / Spring"))

import icons_rc

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

